func start(argc int) (rc int) {
	// --- argc(0) -> a0, b0, c0

//	if argc < 1 {
//		return 2
//	}

	a = argc
	b = 1
	b = b + 2

	c = a + b

	// --- a0, b0, c0 -> c1

	if a > b {
		c = c + a
//	} else {
//		c = c + b
	}

//	i = 0
//	for i < 2 {
//		i = i + 1
//		c = c + 1
//	}

//	if 2 < 1 {
//		return 1
//	}

	// --- a0, b0 -> a1, b1; c1

//	a, b = swap(a, b)

	// --- a1, b1, c1 -> c2

//	for i := 0; i < a; i++ {
//		c += b
//	}

	// --- c2 -> rc(0)

	return c
}

//func swap(a int, b int) (_ int, _ int) {
//	return b, a
//}

/*
func arraySum(a []int) (sum int) {
	i = 0
	for i < len(a) {
		sum += a[i]

		i++
	}

	return sum
}
*/

/*
func loop(a int, b int) (c int) {
	c = 0

	for a < b {
		a++

		if a % 2 == 0 {
			b--
		}

		if a < 3 {
			continue
		}

		if b == 5 {
			break
		}

		c++
	}

	return c
}

	a, b // args

	MOV     c, 0

	B       cond

loop:
//	CMP		a, b
//	BGE     loop_end

	ADD     a, a, 1

	TST     a, #1
	SUB.EQ  b, b, #1

	CMP     a, #3
	BLT     loop

	CMP     b, #5
	BEQ     loop_end

	ADD     c, c, 1

//	B       loop

cond:
	CMP		a, b
	BLT     loop

loop_end:

	RET
*/

/*
func start0(argc int) (rc int) {
	if argc < 2 {
		return 2
	}

	return argc
}
*/

//	ADD X0, X0, X0
//	ADD X0, X0, #2

//	ADD X1, X0, #2
//	ADD X2, X1, X0
//	MOV X0, X2
